import qmath from 'math.js';import search from 'search.js';import base from 'base.js';function attackNearestAOE(t){for(var r={},e=-100,a=!1,o=t.getVisibleRobotMap(),n=t.map,i=0;i<o.length;i++)for(var l=0;l<o[i].length;l++)if(o[i][l]>=0&&!0===n[i][l]){for(var f=search.circle(t,l,i,2),s=0,v=!1,c=0;c<f.length;c++){var m=f[c],u=o[m[1]][m[0]];if(u>0){t.getRobot(u).team!==t.me.team?(s+=1,v=!0):s-=1}}e<s&&!0===v&&(r={x:l,y:i},e=s,a=!0)}return!0===a?r:null}function attackNearest(t){for(var r=99999999,e=null,a=!1,o=0;o<robotsInVision.length;o++){var n=robotsInVision[o];if(void 0!==n.x&&void 0!==n.y){var i=qmath.dist(t.me.x,t.me.y,n.x,n.y);i<r&&(r=i,{x:n.x,y:n.y},a=!0,e=n)}}return!0===a?e:null}export default {attackNearest, attackNearestAOE};