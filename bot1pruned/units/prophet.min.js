import {BCAbstractRobot, SPECS} from 'battlecode';import search from '../search.js';import base from '../base.js';import qmath from '../math.js';import signal from '../signals.js';import pathing from '../pathing/pathing-bundled.js';function mind(e){var t=e.map,a=e.map.length,n=(e.me.team+1)%2,s="",r=e.getVisibleRobotMap(),i=e.getFuelMap(),l=e.getKarboniteMap();if(1===e.me.turn){e.defendLocChosen=!1,e.useRallyTargetToMakeLattice=!0,e.castleTalk(e.me.unit),e.mapIsHorizontal=search.horizontalSymmetry(t),e.initializeCastleLocations(),e.finalTarget=[e.me.x,e.me.y],e.status="defend",e.rallyTarget=[e.me.x,e.me.y],e.defendTarget=[e.me.x,e.me.y],e.moveSpeed="fast",e.origStructureLoc=[e.me.x,e.me.y];for(var o=search.circle(e,e.me.x,e.me.y,2),d=0;d<o.length;d++){var f=r[(K=o[d])[1]][K[0]];if(null!==(j=e.getRobot(f))&&j.team===e.me.team&&(j.unit===SPECS.CASTLE||j.unit===SPECS.CHURCH)){e.origStructureLoc=K;break}}for(d=0;d<a;d++)for(var u=0;u<a;u++)!0===i[d][u]&&(e.fuelSpots.push({x:u,y:d}),e.allSpots.push({x:u,y:d,type:"fuel"})),!0===l[d][u]&&(e.karboniteSpots.push({x:u,y:d}),e.allSpots.push({x:u,y:d,type:"karbonite"}));e.enemyDirection=e.determineEnemyDirection()}5===e.me.turn&&pathing.initializePlanner(e);var m=e.getVisibleRobots(),g=99999,y={0:[],1:[],2:[],3:[],4:[],5:[],6:[]};for(d=0;d<m.length;d++){var c=m[d].signal;if(m[d].team===e.me.team){if(signal.processMessageProphet(e,c),c>=12294&&c<=24583){if(c>=12294&&c<=16389)var S=12294,T=e.getLocation(c-S);if(c>=16392&&c<=20487){e.status="attackTarget";S=16392,T=e.getLocation(c-S);e.finalTarget=[T.x,T.y]}if(c>=20488&&c<=24583){e.status="goToTarget";S=20488,T=e.getLocation(c-S);e.finalTarget=[T.x,T.y],base.logStructure(e,e.finalTarget[0],e.finalTarget[1],n,0)}}if(c>=24586&&c<=28681){e.status="defendSpot";S=24586,T=e.getLocation(c-S);e.defendTarget=[T.x,T.y],e.finalTarget=[T.x,T.y]}else if(c>=29003&&c<=33098&&"rally"!==e.status){"rally"!==e.status&&(e.oldStatus=e.status),e.status="rally";S=29003,T=e.getLocation(c-S);e.finalTarget=[T.x,T.y],e.rallyTarget=e.finalTarget}else if(c>=33099&&c<=37194){S=33099;var x=e.getLocation(c-S);base.logStructure(e,x.x,x.y,n,0);var p=x.x,h=x.y;e.mapIsHorizontal?h=a-h-1:p=a-p-1,base.logStructure(e,p,h,e.me.team,0),e.enemyDirection=e.determineEnemyDirection(p,h)}else if(c>=41292&&c<=45387&&"rally"!==e.status){e.status="attackTarget";S=41292,T=e.getLocation(c-S);e.finalTarget=[T.x,T.y]}}if(m[d].unit===SPECS.PREACHER&&m[d].team===n){!0;(w=qmath.dist(e.me.x,e.me.y,m[d].x,m[d].y))<g&&(g=w,m[d])}else m[d].unit===SPECS.CHURCH&&y[6].push(m[d])}if(e.me.turn>1){var v=99999,C=null;for(d=0;d<e.allSpots.length;d++){var L=e.allSpots[d],P=r[L.y][L.x],E=e.getRobot(r[L.y][L.x]);if(0===P||null!==E&&E.team===e.me.team&&E.unit!==SPECS.PILGRIM){var k=qmath.dist(e.me.x,e.me.y,L.x,L.y);k<v&&(v=k,C=L)}}if(null!==C){var R=getIndexAllSpots(e,[C.x,C.y]);e.castleTalk(R+77)}}if(base.updateKnownStructures(e),"rally"!==e.status&&(e.useRallyTargetToMakeLattice=!0),"defend"===e.status||"defendOldPos"===e.status||"defendSpot"===e.status||"rally"===e.status||"defend2nd"===e.status){var D=search.findNearestStructure(e),b=qmath.dist(e.me.x,e.me.y,D.x,D.y);if(r[e.finalTarget[1]][e.finalTarget[0]]>0&&r[e.finalTarget[1]][e.finalTarget[0]]!==e.me.id&&(e.defendLocChosen=!1),e.me.x%2==1&&e.me.y%2==1||e.me.x%2==0&&e.me.y%2==0||!0===i[e.me.y][e.me.x]||!0===l[e.me.y][e.me.x]||b<=2||"defendOldPos"===e.status){var A=null;!1===e.defendLocChosen&&("left"===e.enemyDirection?A="rally"===e.status?e.findDefendLoc(e,y,e.rallyTarget[0],a,0,a):e.findDefendLoc(e,y,0,e.defendTarget[0],0,a):"right"===e.enemyDirection?A="rally"===e.status?e.findDefendLoc(e,y,0,e.rallyTarget[0],0,a):e.findDefendLoc(e,y,e.defendTarget[0],a,0,a):"up"===e.enemyDirection?A="rally"===e.status?e.findDefendLoc(e,y,0,a,e.rallyTarget[1],a):e.findDefendLoc(e,y,0,a,0,e.defendTarget[1]):"down"===e.enemyDirection&&(A="rally"===e.status?e.findDefendLoc(e,y,0,a,0,e.rallyTarget[1]):e.findDefendLoc(e,y,0,a,e.defendTarget[1],a)),e.defendLocChosen=!0),null!==A&&(e.finalTarget=A),"defendOldPos"===e.status&&(e.status="defend")}}if("searchAndAttack"===e.status&&(e.knownStructures[n].length?e.finalTarget=[e.knownStructures[n][0].x,e.knownStructures[n][0].y]:e.status="defend2nd"),"defend"===e.status||"attackTarget"===e.status||"defendSpot"===e.status||"defend2nd"===e.status){var H=[],q=0;for(d=0;d<m.length;d++){if((j=m[d]).team===n){var w=qmath.dist(e.me.x,e.me.y,j.x,j.y),M=16,I=16;"defendSpot"===e.status&&(M=25,I=49),j.unit===SPECS.PREACHER&&w<=M?H.push([j.x,j.y]):j.unit===SPECS.CRUSADER&&w<=I&&H.push([j.x,j.y])}else j.team===e.me.team&&(j.unit!==SPECS.PROPHET&&j.unit!==SPECS.CRUSADER&&j.unit!==SPECS.PREACHER||(q+=1))}if(q<4){var z=[];if(H.length>0){var O=search.circle(e,e.me.x,e.me.y,4);for(d=0;d<O.length;d++){var U=0,K=O[d];if(search.emptyPos(K[0],K[1],r,e.map)){for(u=0;u<H.length;u++)U+=qmath.dist(K[0],K[1],H[u][0],H[u][1]);z.push({pos:K,dist:U})}}}if(z.length>0){z.sort(function(e,t){return t.dist-e.dist});var V=base.rel(e.me.x,e.me.y,z[0].pos[0],z[0].pos[1]);return{action:e.move(V.dx,V.dy)}}}}if("defend"===e.status||"attackTarget"===e.status||"goToTarget"===e.status||"defendSpot"===e.status||"rally"===e.status||"defend2nd"===e.status){var F,G=99999999,N=!1;for(d=0;d<m.length;d++){var j;if((j=m[d]).team!==e.me.team){var B=qmath.dist(e.me.x,e.me.y,j.x,j.y);B<G&&B>=16&&(G=B,N=!0,F=j)}}if(G<=64&&!0===N){V=base.rel(e.me.x,e.me.y,F.x,F.y);if(e.readyAttack())return s=e.attack(V.dx,V.dy),{action:s}}if(!0===e.destroyedCastle){e.destroyedCastle=!1;e.knownStructures[e.me.team][0].x,e.knownStructures[e.me.team][0].y;e.status="defend"}}if("attackTarget"===e.status){if(!((w=qmath.dist(e.me.x,e.me.y,e.finalTarget[0],e.finalTarget[1]))>=82))return""}else if("goToTarget"===e.status){(w=qmath.dist(e.me.x,e.me.y,e.finalTarget[0],e.finalTarget[1]))<=82&&e.signal(24585,100)}var J=!0;return"slow"!==e.moveSpeed&&"defend"!==e.status&&"defendOldPos"!==e.status&&"attackTarget"!==e.status&&"rally"!==e.status&&"defend2nd"!==e.status||(J=!1),e.me.turn<=3&&(J=!0),s=e.navigate(e.finalTarget,!1,J),{action:s}}function getIndexAllSpots(e,t){for(var a=0;a<e.allSpots.length;a++){var n=e.allSpots[a];if(n.x===t[0]&&n.y===t[1])return a}return null}export default {mind};